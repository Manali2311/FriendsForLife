{"version":3,"sources":["Landing/Card/Card-component/card-component.jsx","Landing/Card/Card-list/card-list.jsx","Landing/Form/form.jsx","Heading/Heading.jsx","App.js","serviceWorker.js","index.js"],"names":["Card","p","className","src","Friends","imgurl","alt","height","name","email","CardList","map","fri","key","id","Form","e","setState","target","value","Last","last","show","arr","props","push","state","image","URL","createObjectURL","files","InputGroup","Prepend","Text","FormControl","this","onChange","placeholder","type","accept","Button","variant","onClick","React","Component","Heading","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c8c24d26.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./card.css\";\r\nimport 'react-bootstrap';\r\n\r\nexport const Card =(p) =>(\r\n    <div className=\"card-compo card\">\r\n <div className=\"gradient-cover\"></div>\r\n    <img className=\"imggvalue card-img-top\" src={p.Friends.imgurl} alt=\"img\" height={p.Friends.height}/>\r\n <div className=\"detail-text card-body\">\r\n <i className=\"name card-title\">{p.Friends.name}</i>\r\n <p className=\"mail card-text\">{p.Friends.email}</p> \r\n </div>\r\n </div>\r\n)\r\n","import React from 'react';\r\nimport './card-list.css';\r\nimport {Card} from '../Card-component/card-component';\r\n\r\nfunction CardList(p){\r\nreturn(\r\n    <div className=\"card-list\">\r\n        {\r\n            p.Friends.map(fri =>(\r\n            <Card key={fri.id} Friends={fri} />\r\n            ))\r\n        }\r\n    </div>\r\n)\r\n}\r\nexport default CardList;","import React from 'react';\r\nimport {InputGroup , FormControl , Button} from 'react-bootstrap';\r\nimport './form.css';\r\nimport CardList from '../Card/Card-list/card-list';\r\n\r\nclass Form extends React.Component{\r\n  constructor(){\r\n    super();\r\n\r\n    this.state={\r\n      name : \"\",\r\n      last : \"\",\r\n      email : \"\",\r\n      image : null\r\n    }\r\n  }\r\n  \r\n  name = (e) =>{\r\n    this.setState({\r\n        name : e.target.value\r\n    })\r\n  }\r\n\r\n  Last = (e) =>{\r\n    this.setState({\r\n        last : e.target.value\r\n    })\r\n  }\r\n\r\n  email = (e) =>{\r\n    this.setState({\r\n        email : e.target.value\r\n    })\r\n  }\r\n\r\n  show = () =>{\r\n    const arr = this.props.Friends;\r\n    arr.push({\r\n      id : 6,\r\n      name : this.state.name,\r\n      email : this.state.email,\r\n      imgurl: this.state.image,\r\n      height : \"235px\"\r\n    })\r\n\r\n    this.setState({\r\n      Friends : arr\r\n    })\r\n  }\r\n  \r\n  image = (e) =>{\r\nthis.setState({\r\n  image : URL.createObjectURL(e.target.files[0])\r\n})\r\n  }\r\n\r\n    render(){\r\n    return(\r\n      <>\r\n      <br/>\r\n      <br/>\r\n        <div className=\"formm\">\r\n          <div className=\"head\">\r\n        <img src=\"/Images/leaf.jpeg\" alt=\"img\" className=\"imgg\" />\r\n        <div className=\"h2\">Register Frndzz</div>\r\n        <img src=\"/Images/leaf.jpeg\" alt=\"img\" className=\"imgg\" />\r\n        </div>\r\n        <br/>\r\n<InputGroup className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n     <InputGroup.Text>First and last name</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n  <FormControl value={this.state.name} onChange={this.name} />\r\n  <FormControl value={this.state.last} onChange={this.Last} />\r\n</InputGroup>\r\n\r\n<InputGroup className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text id=\"basic-addon1\">Email</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    <FormControl\r\n      placeholder=\"Email..\"\r\n      value={this.state.email}\r\n      onChange={this.email}\r\n    />\r\n    </InputGroup>\r\n\r\n    <InputGroup className=\"mb-3\">\r\n    <InputGroup.Prepend>\r\n      <InputGroup.Text id=\"basic-addon1\">Profile</InputGroup.Text>\r\n    </InputGroup.Prepend>\r\n    {/* <FormControl type=\"file\" /> */}\r\n    <FormControl\r\n      type=\"file\" className=\"file\" accept=\".png\"\r\n      onChange={this.image}\r\n      />\r\n    </InputGroup>\r\n     \r\n{/* <input type=\"file\" class=\"custom-file-input\" id=\"inputGroupFile04\"/>\r\n<label class=\"custom-file-label\" for=\"inputGroupFile04\">Choose file\r\n</label> */}\r\n\r\n     \r\n  \r\n  <Button className=\"butt\" variant=\"btn btn-outline-dark\" onClick={this.show}>Insert Frndz</Button>\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        <div className=\"fri\">\r\n      <CardList Friends={this.props.Friends} />\r\n      </div>\r\n        </>\r\n    )\r\n    }\r\n}\r\nexport default Form;","import React from 'react';\r\nimport './heading.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import {Button} from 'react-bootstrap';\r\nimport Form from '../Landing/Form/form';\r\n\r\nclass Heading extends React.Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            Friends:[\r\n                {\r\n                    id:1,\r\n                    name:\"Manali\",\r\n                    email:\"manalisharma2311@gmail.com\",\r\n                    imgurl:\"/Images/1216.jpg\",\r\n                    height : \"250px\"\r\n                },\r\n                {\r\n                    id:2,\r\n                    name:\"Rajsi\",\r\n                    email:\"rajsiiyadav@gmail.com\",\r\n                    imgurl:\"/Images/4854.jpg\",\r\n                    height : \"250px\"\r\n                },\r\n                {\r\n                    id:3,\r\n                    name:\"Gulista\",\r\n                    email:\"gullu@gmail.com\",\r\n                    imgurl:\"/Images/10896.jpg\",\r\n                    height : \"235px\"\r\n                },\r\n                {\r\n                    id:4,\r\n                    name:\"Sakshi\",\r\n                    email:\"saksC@gmail.com\",\r\n                    imgurl:\"/Images/6844.jpg\",\r\n                    height : \"235px\"\r\n                },\r\n                {\r\n                    id:5,\r\n                    name:\"Janhvi\",\r\n                    email:\"mudrisjanhvi@gmail.com\",\r\n                    imgurl:\"/Images/417.jpg\",\r\n                    height : \"235px\"\r\n                },\r\n            ]\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n            <div className=\"top\">\r\n            <img src=\"/Images/leaf4.jpeg\" alt=\"img\" className=\"img-bird2\" />\r\n                <div className=\"main-heading\">\r\n                    <i><u>Friends are choosen family</u></i>\r\n                    </div>\r\n            <img src=\"/Images/leaf4.jpeg\" alt=\"img\" className=\"img-bird\" />\r\n\r\n                </div>\r\n                {/* <div>\r\n               <CardList Friends={this.state.Friends} />\r\n               </div> */}\r\n               <br/>\r\n               <br/>\r\n               <div className=\"form\">\r\n               <Form Friends={this.state.Friends} />\r\n               </div>\r\n               <br/>\r\n               <br/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Heading;","import React from 'react';\n\nimport './App.css';\nimport Heading from './Heading/Heading';\n\nfunction App() {\n  return (\n    <div>\n      <Heading />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}